import React, { useEffect, Fragment, useState } from "react";
import { useMutation, useSubscription } from "@apollo/react-hooks";

const { loading, error, data } = useSubscription(
     gql`
       subscription getOnlineUsers {
         online_users(order_by: { user: { name: asc } }) {
           id
           user {
             name
           }
         }
       }
     `
   );
 
   if (loading) {
     return <span>Loading...</span>;
   }
   if (error) {
     console.error(error);
     return <span>Error!</span>;
   }
   if (data) {
     onlineUsersList = data.online_users.map(u => (
       <OnlineUser key={u.id} user={u.user} />
     ));
   }
 
   return (
     <div className="onlineUsersWrapper">
       <Fragment>
         <div className="sliderHeader">
           Online users - {onlineUsersList.length}
         </div>
         {onlineUsersList}
       </Fragment>
     </div>
   );
 };
export default OnlineUsersWrapper;

const OnlineUsersWrapper = () => {
  const onlineUsers = [{ name: "someUser1" }, { name: "someUser2" }];
  const onlineUsersList = [];
  onlineUsers.forEach((user, index) => {
    onlineUsersList.push(<OnlineUser key={index} index={index} user={user} />);
  });
  return (
    <div className="onlineUsersWrapper">
      <div className="sliderHeader">Online users - {onlineUsers.length}</div>
      {onlineUsersList}
    </div>
  );
};